interface Node {
  id: ID!
}

type Package implements Node {
  id: ID!
  name: String!
  activities: [Activity!]!
  image: Image
  price: Int
  hasActivity(id: ID!): Boolean!
  calculateSavings(id: ID!): Int
}

type Query {
  packages: [Package!]!
  package(packageId: ID!): Package
  activities: [Activity!]!
  activity(activityId: ID!): Activity
  hotels: [Hotel!]!
  hotel(hotelId: ID!): Hotel
}

type Image {
  id: ID!
}

type Activity implements Node {
  id: ID!
  name: String!
  Schedule: String
  category: ActivityCategory!
  price: Int
}

type Hotel implements Node {
  id: ID!
  name: String!
  packages: [Package!]!
}

enum ActivityCategory {
  LEISURE
  ADVENTURE
  CULTURE
}
